from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import (
    ApplicationBuilder, CommandHandler, MessageHandler,
    filters, ContextTypes, ConversationHandler
)
import asyncio
import random

# üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∏
TOKEN = "7436013012:AAGDYHV2P8mDuruQIBQCRCqmxC-864bZr3Q"
MASTER_CHAT_ID = 5225197085

# üìú –¶–∏—Ç–∞—Ç—ã
QUOTES = [
    "üçµ –ß–∞–π ‚Äî —ç—Ç–æ –≤–æ–¥–∞, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–º–Ω–∏—Ç.",
    "üåø –ö–∞–∂–¥–∞—è –∑–∞–≤–∞—Ä–∫–∞ ‚Äî –∫–∞–∫ –Ω–æ–≤–∞—è –∂–∏–∑–Ω—å.",
    "‚òÅÔ∏è –ó–∞–≤–∞—Ä–∏ —á–∞–π, —É—Å–ø–æ–∫–æ–π –≤–µ—Ç–µ—Ä –≤ –≥–æ–ª–æ–≤–µ.",
    "ü™∑ –°–ª—É—à–∞–π, –∫–∞–∫ –º–æ–ª—á–∏—Ç —á–∞–π.",
    "üî• –ö–∏–ø—è—Ç–æ–∫ –ª–µ—á–∏—Ç —Å–ø–µ—à–∫—É.",
    "ü´ñ –í—Ä–µ–º—è —Å —á–∞–µ–º –∏–¥—ë—Ç –∏–Ω–∞—á–µ.",
    "üçÉ –î–∞–∂–µ –æ–¥–∏–Ω –≥–ª–æ—Ç–æ–∫ –º–æ–∂–µ—Ç –±—ã—Ç—å —Ü–µ—Ä–µ–º–æ–Ω–∏–µ–π.",
    "üêâ –ü—É—ç—Ä —Ö—Ä–∞–Ω–∏—Ç –∏—Å—Ç–æ—Ä–∏–∏ –ø–µ—â–µ—Ä.",
    "üßò –ö—Ç–æ –ø—å—ë—Ç —á–∞–π ‚Äî –Ω–µ —Å–ø–µ—à–∏—Ç.",
    "üí≠ –ú—É–¥—Ä–æ—Å—Ç—å —É—Ö–æ–¥–∏—Ç –≤ –æ—Å–∞–¥–æ–∫, –∫–∞–∫ —á–∞–π–Ω—ã–µ –ª–∏—Å—Ç—å—è.",
    # –¥–æ–±–∞–≤—å –µ—â—ë 90 ‚Äî –µ—Å–ª–∏ —Ö–æ—á–µ—à—å, –º–æ–≥—É —Å–∫–∏–Ω—É—Ç—å –≤–µ—Å—å —Å–ø–∏—Å–æ–∫
]

# –°–æ—Å—Ç–æ—è–Ω–∏—è
NAME, DATE, PLACE, COMMENTS, PHONE = range(5)

# --- –ö–æ–º–∞–Ω–¥—ã
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        ["üßò –û –ø—Ä–∞–∫—Ç–∏–∫–µ", "üìÖ –ó–∞–ø–∏—Å–∞—Ç—å—Å—è"],
        ["üçµ –¶–∏—Ç–∞—Ç–∞ –¥–Ω—è –æ—Ç —á–∞–π–Ω–æ–≥–æ –ø—å—è–Ω–∏—Ü—ã"],
        ["ü§ù –ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å –ø—Ä–æ–µ–∫—Ç", "‚úâÔ∏è –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å–∫—É"]
    ]
    await update.message.reply_text(
        "üçÉ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ *–ì–≤–æ–∑–¥–∏ –∏ –õ–∏—Å—Ç—å—è*.\n\n"
        "üî© –ì–≤–æ–∑–¥–∏\nüçµ –ß–∞–π\nüíÜ –ë–∞–Ω–∫–∏\nüèï –í—ã–µ–∑–¥—ã\n\n"
        "üëá –í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=ReplyKeyboardMarkup(keyboard, resize_keyboard=True),
        parse_mode="Markdown"
    )

async def practice(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üåø –ó–¥–µ—Å—å –º—ã:\n"
        "üî© —Å—Ç–æ–∏–º –Ω–∞ –≥–≤–æ–∑–¥—è—Ö\n"
        "üçµ –ø—å–µ–º —á–∞–π (–ø—É—ç—Ä—ã, —É–ª—É–Ω—ã, –î–∞ –•—É–Ω –ü–∞–æ)\n"
        "üíÜ —Å—Ç–∞–≤–∏–º –±–∞–Ω–∫–∏\n"
        "üèï –≤—ã–µ–∑–∂–∞–µ–º –≤ –ª–µ—Å–∞\n"
        "üí¨ –ø—Ä–æ—Å—Ç–æ –≥–æ–≤–æ—Ä–∏–º –ø–æ –¥—É—à–∞–º"
    )

# --- –ó–∞—è–≤–∫–∞
async def sign_up(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?")
    return NAME

async def get_name(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["name"] = update.message.text
    await update.message.reply_text("–ö–æ–≥–¥–∞ —Ç–µ–±–µ —É–¥–æ–±–Ω–æ?")
    return DATE

async def get_date(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["date"] = update.message.text
    await update.message.reply_text("–ì–¥–µ —Ö–æ—á–µ—à—å –ø—Ä–æ–≤–µ—Å—Ç–∏ –ø—Ä–∞–∫—Ç–∏–∫—É?")
    return PLACE

async def get_place(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["place"] = update.message.text
    await update.message.reply_text("–ï—Å—Ç—å –ø–æ–∂–µ–ª–∞–Ω–∏—è?")
    return COMMENTS

async def get_comments(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["comments"] = update.message.text
    await update.message.reply_text("–û—Å—Ç–∞–≤—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ üì±")
    return PHONE

async def get_phone(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["phone"] = update.message.text
    user = update.message.from_user

    text = (
        f"üì• *–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞:*\n"
        f"üë§ –ò–º—è: {context.user_data['name']}\n"
        f"üìÖ –í—Ä–µ–º—è: {context.user_data['date']}\n"
        f"üìç –ú–µ—Å—Ç–æ: {context.user_data['place']}\n"
        f"üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏: {context.user_data['comments']}\n"
        f"üì± –¢–µ–ª–µ—Ñ–æ–Ω: {context.user_data['phone']}\n"
        f"Telegram: @{user.username or '–Ω–µ—Ç'}"
    )

    await context.bot.send_message(chat_id=MASTER_CHAT_ID, text=text, parse_mode="Markdown")
    await update.message.reply_text("–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ üôå")
    return ConversationHandler.END

# --- –¶–∏—Ç–∞—Ç–∞
async def send_quote(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(random.choice(QUOTES))

# --- –ü–æ–¥–¥–µ—Ä–∂–∫–∞
async def support(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üíö –•–æ—á–µ—à—å –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –ø—Ä–æ–µ–∫—Ç?\n\n"
        "üì≤ –ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ –Ω–æ–º–µ—Ä: *+7 912 852-81-81*\n"
        "_–°–±–µ—Ä–±–∞–Ω–∫ / –¢-–ë–∞–Ω–∫_\n\n"
        "–ò–ª–∏ –ø—Ä–∏—Ö–æ–¥–∏ –Ω–∞ —á–∞–π üêâ",
        parse_mode="Markdown"
    )

# --- –°–≤—è–∑—å
async def note_entry(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–û—Å—Ç–∞–≤—å –∑–∞–ø–∏—Å–∫—É, –∏ —è –ø–æ–ª—É—á—É –µ—ë –ª–∏—á–Ω–æ üôè")
    return PHONE

async def receive_note(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.message.from_user
    await context.bot.send_message(
        MASTER_CHAT_ID,
        f"üì© –ó–∞–ø–∏—Å–∫–∞ –æ—Ç @{user.username or '–∞–Ω–æ–Ω–∏–º'}:\n\n{update.message.text}"
    )
    await update.message.reply_text("–°–ø–∞—Å–∏–±–æ, –ø–µ—Ä–µ–¥–∞–Ω–æ üôè")
    return ConversationHandler.END

# --- –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞
async def unknown(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ù–µ –ø–æ–Ω—è–ª —Ç–µ–±—è üôÉ –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ!")

# ‚ñ∂Ô∏è MAIN
async def main():
    app = ApplicationBuilder().token(TOKEN).build()

    # –ó–∞—è–≤–∫–∞
    sign_conv = ConversationHandler(
        entry_points=[MessageHandler(filters.Regex("üìÖ –ó–∞–ø–∏—Å–∞—Ç—å—Å—è"), sign_up)],
        states={
            NAME: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_name)],
            DATE: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_date)],
            PLACE: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_place)],
            COMMENTS: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_comments)],
            PHONE: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_phone)],
        },
        fallbacks=[]
    )

    # –ó–∞–ø–∏—Å–∫–∞
    note_conv = ConversationHandler(
        entry_points=[MessageHandler(filters.Regex("‚úâÔ∏è –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å–∫—É"), note_entry)],
        states={PHONE: [MessageHandler(filters.TEXT & ~filters.COMMAND, receive_note)]},
        fallbacks=[]
    )

    app.add_handler(CommandHandler("start", start))
    app.add_handler(sign_conv)
    app.add_handler(note_conv)
    app.add_handler(MessageHandler(filters.Regex("üßò –û –ø—Ä–∞–∫—Ç–∏–∫–µ"), practice))
    app.add_handler(MessageHandler(filters.Regex("ü§ù –ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å –ø—Ä–æ–µ–∫—Ç"), support))
    app.add_handler(MessageHandler(filters.Regex("üçµ –¶–∏—Ç–∞—Ç–∞ –¥–Ω—è –æ—Ç —á–∞–π–Ω–æ–≥–æ –ø—å—è–Ω–∏—Ü—ã"), send_quote))
    app.add_handler(MessageHandler(filters.COMMAND, unknown))
    app.add_handler(MessageHandler(filters.TEXT, unknown))

    await app.run_polling()

if __name__ == "__main__":
    asyncio.run(main())
